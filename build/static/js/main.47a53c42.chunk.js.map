{"version":3,"sources":["Header/Header.js","Menu/Menu.js","UI/Input/Input.js","Pages/Picture/Picture.js","Pages/About/About.js","Pages/Speakers/Speakers.js","Pages/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["header","className","Menu","to","exact","input","props","inputElement","elementType","elementConfig","value","label","Picture","state","tonightsPictureForm","name","type","placeholder","age","formElementsArray","key","this","push","id","config","map","formElement","inputtype","Component","About","Speakers","Home","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0XAWeA,G,kBARA,WACb,OACE,4BAAQC,UAAU,cAChB,iE,eCoBSC,EAvBF,WACX,OACE,yBAAKD,UAAU,QACb,4BACE,4BACE,kBAAC,IAAD,CAASE,GAAG,IAAIC,OAAK,GAArB,SAIF,4BACE,kBAAC,IAAD,CAASD,GAAG,aAAZ,qBAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,YAAZ,mBAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,UAAZ,U,uCCsBKE,G,MAtCD,SAACC,GACb,IAAIC,EAAe,KACnB,OAAQD,EAAME,aACZ,IAAK,QACHD,EACE,yCACEN,UAAU,gBACNK,EAAMG,cAFZ,CAGEC,MAAOJ,EAAMI,SAGjB,MACF,IAAK,WACHH,EACE,4CACEN,UAAU,gBACNK,EAAMG,cAFZ,CAGEC,MAAOJ,EAAMI,SAGjB,MACF,QACEH,EACE,yCACEN,UAAU,gBACNK,EAAMG,cAFZ,CAGEC,MAAOJ,EAAMI,SAIrB,OACE,yBAAKT,UAAU,SACb,2BAAOA,UAAU,SAASK,EAAMK,OAC/BJ,KCwBQK,G,kNAxDbC,MAAQ,CACNC,oBAAqB,CACnBC,KAAM,CACJP,YAAa,QACbC,cAAe,CACbO,KAAM,OACNC,YAAa,aAEfP,MAAO,IAETQ,IAAK,CACHV,YAAa,QACbC,cAAe,CACbO,KAAM,OACNC,YAAa,YAEfP,MAAO,M,uDAMX,IAAMS,EAAoB,GAC1B,IAAK,IAAIC,KAAOC,KAAKR,MAAMC,oBACzBK,EAAkBG,KAAK,CACrBC,GAAIH,EACJI,OAAQH,KAAKR,MAAMC,oBAAoBM,KA0B3C,OArBE,yBAAKnB,UAAU,WACb,8CACA,8BACGkB,EAAkBM,KAAI,SAACC,GAAD,OACrB,kBAAC,EAAD,CACEN,IAAKM,EAAYH,GACjBf,YAAakB,EAAYF,OAAOhB,YAChCC,cAAeiB,EAAYF,OAAOf,cAClCC,MAAOgB,EAAYF,OAAOd,WAG9B,kBAAC,EAAD,CACEiB,UAAU,QACVnB,YAAY,MACZC,cAAc,MACdC,MAAM,c,GA/CIkB,c,MC2CPC,MA5Cf,WACE,OACE,yBAAK5B,UAAU,SACb,kCACA,oWAOA,kNAKA,4OAKA,oPAKA,qLAKA,kIAIA,0IAIA,6D,MCNS6B,MAjCf,WACE,OACE,yBAAK7B,UAAU,YACb,gDACA,iNAKA,6IAIA,sCACA,iNAMA,uCACA,kTAOA,8D,MCHS8B,MAxBf,WACE,OACE,yBAAK9B,UAAU,QACb,yBAAKA,UAAU,UACb,8EAEF,yBAAKA,UAAU,WACb,6KAIA,iGAIA,6ICMO+B,MAff,WACE,OACE,kBAAC,IAAD,KACE,yBAAK/B,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOgC,KAAK,IAAI7B,OAAK,EAAC8B,UAAWH,IACjC,kBAAC,IAAD,CAAOE,KAAK,WAAW7B,OAAK,EAAC8B,UAAWtB,IACxC,kBAAC,IAAD,CAAOqB,KAAK,SAAS7B,OAAK,EAAC8B,UAAWL,IACtC,kBAAC,IAAD,CAAOI,KAAK,YAAY7B,OAAK,EAAC8B,UAAWJ,OCN7BK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.47a53c42.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst header = () => {\r\n  return (\r\n    <header className=\"App-header\">\r\n      <h1>Vennesla Film & Naturfotoklubb</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default header;\r\n","import React from \"react\";\r\nimport \"./Menu.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst Menu = () => {\r\n  return (\r\n    <div className=\"Menu\">\r\n      <ul>\r\n        <li>\r\n          <NavLink to=\"/\" exact>\r\n            HJEM\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/speakers\">FOREDRAGSHOLDERE</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/picture\">KVELDENS BILDE</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/about\">OM</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport \"./Input.css\";\r\n\r\nconst input = (props) => {\r\n  let inputElement = null;\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className=\"InputElement\"\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className=\"InputElement\"\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n        />\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className=\"InputElement\"\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n        />\r\n      );\r\n  }\r\n  return (\r\n    <div className=\"Input\">\r\n      <label className=\"Label\">{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"../../UI/Input/Input\";\r\nimport \"./Picture.css\";\r\nclass Picture extends Component {\r\n  state = {\r\n    tonightsPictureForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your name\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      age: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your age\",\r\n        },\r\n        value: \"\",\r\n      },\r\n    },\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.tonightsPictureForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.tonightsPictureForm[key],\r\n      });\r\n    }\r\n\r\n    let form = (\r\n      <div className=\"Picture\">\r\n        <h1>Kveldens bilde</h1>\r\n        <form>\r\n          {formElementsArray.map((formElement) => (\r\n            <Input\r\n              key={formElement.id}\r\n              elementType={formElement.config.elementType}\r\n              elementConfig={formElement.config.elementConfig}\r\n              value={formElement.config.value}\r\n            />\r\n          ))}\r\n          <Input\r\n            inputtype=\"input\"\r\n            elementType=\"...\"\r\n            elementConfig=\"...\"\r\n            value=\"...\"\r\n          ></Input>\r\n        </form>\r\n      </div>\r\n    );\r\n\r\n    return form;\r\n  }\r\n}\r\n\r\nexport default Picture;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\nfunction About() {\r\n  return (\r\n    <div className=\"About\">\r\n      <h1>Om</h1>\r\n      <p>\r\n        Vennesla Film & Naturfotoklubb ble stiftet 22.02.1961, den gang var\r\n        navnet \"Vennesla Fotoklubb\". På årsmøtet 07.01.2010 ble det fattet\r\n        vedtak om navnebytte. Dels for å formelt inkludere klubbens aktive\r\n        \"filmere\", og for å ta høyde for at film nå er en del av de fleste nye\r\n        digitale speilreflekskameraene.\r\n      </p>\r\n      <p>\r\n        Vi er en gjeng på 20-30 medlemmer som hver første torsdag i måneden\r\n        møtes til sosialt samvær i kjelleren på Vennesla Kulturhus. Fotomøtene\r\n        begynner kl. 19.00.\r\n      </p>\r\n      <p>\r\n        Av gjøremål på klubbkveldene er \"Kveldens bilde\" et rimelig fast\r\n        innslag. Det innebærer at de som vil, leverer fra seg bilder til en\r\n        liten uformell konkurranse, der premien er \"heder & ære\".\r\n      </p>\r\n      <p>\r\n        \"Bildekritikk\" kommer tidvis på agendaen. Her leverer de som vil, inn\r\n        bilder som blir bedømt og betraktet. Og siden foto er en svært subjektiv\r\n        uttrykksform foretrekker vi å fokusere på det positive.\r\n      </p>\r\n      <p>\r\n        Bildeserier eller film av og med klubbens egne (film)fotografer er som\r\n        regel en del av kvelden. Eller kanskje bidrar en ekstern\r\n        foredragsholder(e) !?!\r\n      </p>\r\n      <p>\r\n        Klubben har et trivelig og åpent miljø hvor hovedinteressen ligger på\r\n        motiver fra naturen.\r\n      </p>\r\n      <p>\r\n        Skulle du ha lyst til å komme for å se om dette kunne være noe for deg,\r\n        er du hjertelig velkommen.\r\n      </p>\r\n      <p>Organisasjonsnr: 997 504 909</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"./Speakers.css\";\r\nfunction Speakers() {\r\n  return (\r\n    <div className=\"Speakers\">\r\n      <h1>Foredragsholdere</h1>\r\n      <p>\r\n        Skal du holde foredrag eller bildevisning i klubben ønsker vi å legge\r\n        dette ut på vår Facebook-Side. Dette gjelder for både medlemmer og\r\n        eksterne foredragsholdere.\r\n      </p>\r\n      <p>\r\n        Dette forutsetter at vi mottar tekst og bilder vi kan bruke, og senest\r\n        14 dager før foredraget finner sted.\r\n      </p>\r\n      <h3>Tekst:</h3>\r\n      <p>\r\n        Skriv litt om hva foredraget handler om og gjerne litt om deg/dere selv.\r\n        Vi foretrekker å få teksten så \"ferdig\" som mulig, men forbeholder oss\r\n        retten til å redigere.\r\n      </p>\r\n\r\n      <h3>Bilder:</h3>\r\n      <p>\r\n        Bildene må/bør være tilpasset Facebook (fortrinnsvis 960px eller 2048px\r\n        i lengden) og være av god kvalitet. Vil du ha bildene \"vannmerket\"\r\n        forestår du dette selv. Det er ønskelig å motta et bilde av deg/dere og\r\n        gjerne 5-6 bilder som \"speiler\" foredraget.\r\n      </p>\r\n\r\n      <p>På forhånd, tusen takk.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Speakers;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className=\"Header\">\r\n        <h1>Velkommen til Vennesla Film & Naturfotoklubb.</h1>\r\n      </div>\r\n      <div className=\"Content\">\r\n        <p>\r\n          Dette nettstedet har med tiden endret seg til å fremstå som statisk,\r\n          da klubbens Facebook-side har overtatt som kommunikasjonsplattform.\r\n        </p>\r\n        <p>\r\n          Der finner du, blant annet, oppdatert program for gjeldene sesong.\r\n        </p>\r\n\r\n        <p>\r\n          Skulle du ikke være \"medlem\" av Facebook kan du likevle få med deg det\r\n          viktigste ved å trykke her.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header/Header\";\nimport Menu from \"./Menu/Menu\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Picture from \"./Pages/Picture/Picture\";\nimport About from \"./Pages/About/About\";\nimport Speakers from \"./Pages/Speakers/Speakers\";\nimport Home from \"./Pages/Home/Home\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Menu />\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/picture\" exact component={Picture} />\n        <Route path=\"/about\" exact component={About} />\n        <Route path=\"/speakers\" exact component={Speakers} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}